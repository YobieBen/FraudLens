# Production Multi-stage Dockerfile for FraudLens
# Optimized for size, security, and performance

# Stage 1: Builder
FROM python:3.11-slim as builder

# Build arguments
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=1.0.0

# Labels
LABEL org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="FraudLens" \
      org.label-schema.description="Advanced AI-Powered Fraud Detection System" \
      org.label-schema.url="https://github.com/yourusername/FraudLens" \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.version=$VERSION \
      org.label-schema.schema-version="1.0"

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Stage 2: Production
FROM python:3.11-slim

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r fraudlens && useradd -r -g fraudlens fraudlens

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code with proper ownership
COPY --chown=fraudlens:fraudlens fraudlens/ ./fraudlens/
COPY --chown=fraudlens:fraudlens configs/ ./configs/
COPY --chown=fraudlens:fraudlens data/samples/ ./data/samples/
COPY --chown=fraudlens:fraudlens setup.py ./setup.py

# Create necessary directories with proper permissions
RUN mkdir -p /app/logs /app/data/cache /app/data/uploads /app/models /app/plugins && \
    chown -R fraudlens:fraudlens /app

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    FRAUDLENS_ENV=production \
    FRAUDLENS_MAX_MEMORY_GB=8

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Switch to non-root user
USER fraudlens

# Expose ports
EXPOSE 8000 8001 8501

# Default command - run the secured API
CMD ["python", "-m", "uvicorn", "fraudlens.api.secured_api:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]